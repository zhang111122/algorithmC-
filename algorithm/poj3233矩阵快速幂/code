//第八题 矩阵乘法
#include<iostream>
#include<math.h>
using namespace std;
int a[65][65], b[65][65],c[65][65];
int n,m,k;
void show(int a[65][65])
{
	for (int i = 1; i <= 2 * n; i++)
	{
		for (int j = 1; j <= 2 * n; j++)
			cout << a[i][j] << " ";
		cout << endl;
	}
		
}
void mult(int a[65][65], int b[65][65])//两者相乘后的结果赋值给前者
{
		for(int i = 1;i<=2*n;i++)
			for (int j = 1; j <= 2*n; j++)
			{
				c[i][j] = 0;//非常重要，因为如果多次进行矩阵乘法，要清空c矩阵
				for (int k = 1; k <= 2*n; k++)
				{
					c[i][j] = (c[i][j]+ a[i][k] * b[k][j]) % m;
				}
				
			}
		for (int i = 1; i <= 2*n; i++)
			for (int j = 1; j <= 2*n; j++)
				a[i][j] = c[i][j];
}
int main()
{
	cin >> n >> k >> m;
	for(int i = 1;i<=n;i++)
		for (int j = 1; j <= n; j++)
		{
			cin >> a[i][j];
			a[i][i + n] = a[i + n][i + n] = b[i][i] = b[i + n][i + n] = 1;
		}

	
		
	int s = k + 1;
	while (s)
	{
		if (s%2== 1)
			mult(b, a);
		
		mult(a, a);

		
		s = s / 2;
	}

	for (int i = 1; i <= n; i++) b[i][i + n] = (b[i][i+n]+m-1)%m;
		
	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <=  n; j++)
		{
			cout << b[i][j+n]<<" ";
		}
		cout << endl;
	}
		
	return 0;
}
